name: SonarCloud Analysis

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

jobs:
  coverage:
    uses: ./.github/workflows/coverage.yml
    permissions:
      actions: write
      contents: read
    secrets: inherit

  analyze:
    if: ${{ secrets.SONAR_TOKEN != '' }}
    needs: coverage
    name: SonarCloud
    runs-on: ubuntu-24.04
    permissions:
      actions: write
      contents: read
      pull-requests: read
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download coverage artifact
        if: needs.coverage.outputs.coverage-generated == 'true'
        uses: actions/download-artifact@v4
        with:
          name: lcov-report
          path: coverage

      - name: Coverage artifact not available
        if: needs.coverage.outputs.coverage-generated != 'true'
        run: echo "::notice title=Coverage::No coverage artifact was produced for this run."

      - name: Install g++-14
        run: |
          sudo apt-get update
          sudo apt-get install -y g++-14
      
      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarCloud build-wrapper
        id: build-wrapper-cache
        uses: actions/cache@v4
        with:
          path: build-wrapper-linux-x86
          key: ${{ runner.os }}-build-wrapper
          restore-keys: ${{ runner.os }}-build-wrapper

      - name: Download build-wrapper
        if: steps.build-wrapper-cache.outputs.cache-hit != 'true'
        run: |
          curl -sSLo build-wrapper-linux-x86.zip https://sonarcloud.io/static/cpp/build-wrapper-linux-x86.zip
          unzip -q build-wrapper-linux-x86.zip

      - name: Build with build-wrapper
        run: |
          ./build-wrapper-linux-x86/build-wrapper-linux-x86-64 --out-dir bw-output bash -c '
            set -euo pipefail
            cxx=$(command -v g++-14 || command -v g++)
            if [[ -z "$cxx" ]]; then
              echo "No suitable g++ compiler found" >&2
              exit 1
            fi
            "$cxx" --version
            make clean
            make \
              CXX="$cxx" \
              BUILD_DIR="build" \
              CXXFLAGS="-std=c++23 -O2" \
              DIRS="2023 2024" \
              -j"$(nproc)"
          '

      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v5.0.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: https://sonarcloud.io
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: SonarCloud Quality Gate
        uses: SonarSource/sonarqube-quality-gate-action@v1.1.0
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: https://sonarcloud.io
